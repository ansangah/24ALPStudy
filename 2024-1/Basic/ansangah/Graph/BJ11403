// 경로 찾기
// 플로이드-와샬 알고리즘
#include <bits/stdc++.h>
using namespace std;

int g[101][101]; 

int main() {
	int n; cin >> n; 
	for(int i = 0; i < n; i++){
		for (int j = 0; j < n; j++) {
			cin >> g[i][j]; 
		}
	}
	for (int k = 0; k < n; k++) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (g[i][k] && g[k][j]) {
					g[i][j] = 1; 
				}
			}
		}
	}
    // k 반복문 -> 중간 정점 선택
    // i 반복문 / j 반복문 -> 선택된 중간 정점 경유하며 최단거리 갱신
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << g[i][j] << " ";
		}
        cout << '\n'; 
	}
}
